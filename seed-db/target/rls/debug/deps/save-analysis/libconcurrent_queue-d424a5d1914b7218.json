{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2","program":"D:\\Code\\.rustup\\toolchains\\stable-x86_64-pc-windows-gnu\\bin\\rls.exe","arguments":["--crate-name","concurrent_queue","--edition=2018","D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=d424a5d1914b7218","-C","extra-filename=-d424a5d1914b7218","--out-dir","d:\\CODE\\SITES\\Yokio\\yolk-io-db-server\\seed-db\\target\\rls\\debug\\deps","-L","dependency=d:\\CODE\\SITES\\Yokio\\yolk-io-db-server\\seed-db\\target\\rls\\debug\\deps","--extern","cache_padded=d:\\CODE\\SITES\\Yokio\\yolk-io-db-server\\seed-db\\target\\rls\\debug\\deps\\libcache_padded-7429ad08e89ca1a4.rmeta","--cap-lints","allow","--error-format=json","--sysroot","D:\\Code\\.rustup/toolchains/stable-x86_64-pc-windows-gnu"],"output":"d:\\CODE\\SITES\\Yokio\\yolk-io-db-server\\seed-db\\target\\rls\\debug\\deps\\libconcurrent_queue-d424a5d1914b7218.rmeta"},"prelude":{"crate_id":{"name":"concurrent_queue","disambiguator":[5708289767369348205,5715876201185299734]},"crate_root":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src","external_crates":[{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[3352939126190691768,1522098553836837022]}},{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[10748927283253715802,17487996537429769393]}},{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[381073777652301199,6196931506242107916]}},{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14920011173283275970,12685728538647339241]}},{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16649941032322784614,2791866742535249453]}},{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[16345648204493251282,5712694003323730019]}},{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4151739601928172351,15573246285596957214]}},{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[10908491025620499992,9730562629999081667]}},{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[13032295415584120790,13640360672220012022]}},{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[2966969092466830827,9616317387896225501]}},{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[6934675805538584132,15370839114258128]}},{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[15753487870974575168,8319099573922174756]}},{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13427696038042078207,9210243937700237822]}},{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[496581973602561143,694120070418778256]}},{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\bounded.rs","num":15,"id":{"name":"cache_padded","disambiguator":[17884886066882648784,3719809344528884263]}}],"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":0,"byte_end":12572,"line_start":1,"line_end":448,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":0,"byte_end":12572,"line_start":1,"line_end":448,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":53},{"krate":0,"index":115},{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":123},{"krate":0,"index":131},{"krate":0,"index":143},{"krate":0,"index":168},{"krate":0,"index":180},{"krate":0,"index":179},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":146},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":182},{"krate":0,"index":203},{"krate":0,"index":201},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":154},{"krate":0,"index":159},{"krate":0,"index":161},{"krate":0,"index":164},{"krate":0,"index":167}],"decl_id":null,"docs":" A concurrent multi-producer multi-consumer queue.","sig":null,"attributes":[{"value":"! A concurrent multi-producer multi-consumer queue.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":0,"byte_end":53,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":54,"byte_end":57,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! There are two kinds of queues:","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":58,"byte_end":92,"line_start":3,"line_end":3,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":93,"byte_end":96,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! 1. [Bounded] queue with limited capacity.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":97,"byte_end":142,"line_start":5,"line_end":5,"column_start":1,"column_end":46}},{"value":"! 2. [Unbounded] queue with unlimited capacity.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":143,"byte_end":192,"line_start":6,"line_end":6,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":193,"byte_end":196,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! Queues also have the capability to get [closed] at any point. When closed, no more items can be","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":197,"byte_end":296,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"! pushed into the queue, although the remaining items can still be popped.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":297,"byte_end":373,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":374,"byte_end":377,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! These features make it easy to build channels similar to [`std::sync::mpsc`] on top of this","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":378,"byte_end":473,"line_start":11,"line_end":11,"column_start":1,"column_end":96}},{"value":"! crate.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":474,"byte_end":484,"line_start":12,"line_end":12,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":485,"byte_end":488,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":489,"byte_end":503,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":504,"byte_end":507,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":508,"byte_end":515,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"! use concurrent_queue::ConcurrentQueue;","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":516,"byte_end":558,"line_start":17,"line_end":17,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":559,"byte_end":562,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! let q = ConcurrentQueue::unbounded();","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":563,"byte_end":604,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"! q.push(1).unwrap();","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":605,"byte_end":628,"line_start":20,"line_end":20,"column_start":1,"column_end":24}},{"value":"! q.push(2).unwrap();","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":629,"byte_end":652,"line_start":21,"line_end":21,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":653,"byte_end":656,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! assert_eq!(q.pop(), Ok(1));","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":657,"byte_end":688,"line_start":23,"line_end":23,"column_start":1,"column_end":32}},{"value":"! assert_eq!(q.pop(), Ok(2));","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":689,"byte_end":720,"line_start":24,"line_end":24,"column_start":1,"column_end":32}},{"value":"! ```","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":721,"byte_end":728,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":729,"byte_end":732,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! [Bounded]: `ConcurrentQueue::bounded()`","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":733,"byte_end":776,"line_start":27,"line_end":27,"column_start":1,"column_end":44}},{"value":"! [Unbounded]: `ConcurrentQueue::unbounded()`","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":777,"byte_end":824,"line_start":28,"line_end":28,"column_start":1,"column_end":48}},{"value":"! [closed]: `ConcurrentQueue::close()`","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":825,"byte_end":865,"line_start":29,"line_end":29,"column_start":1,"column_end":41}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":867,"byte_end":938,"line_start":31,"line_end":31,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":115},"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":1555,"byte_end":1570,"line_start":60,"line_end":60,"column_start":12,"column_end":27},"name":"ConcurrentQueue","qualname":"::ConcurrentQueue","value":"","parent":null,"children":[],"decl_id":null,"docs":" A concurrent queue.","sig":null,"attributes":[{"value":"/ A concurrent queue.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":1117,"byte_end":1140,"line_start":43,"line_end":43,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":1141,"byte_end":1144,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":1145,"byte_end":1159,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":1160,"byte_end":1163,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":1164,"byte_end":1171,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ use concurrent_queue::{ConcurrentQueue, PopError, PushError};","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":1172,"byte_end":1237,"line_start":48,"line_end":48,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":1238,"byte_end":1241,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ let q = ConcurrentQueue::bounded(2);","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":1242,"byte_end":1282,"line_start":50,"line_end":50,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":1283,"byte_end":1286,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(q.push('a'), Ok(()));","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":1287,"byte_end":1323,"line_start":52,"line_end":52,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(q.push('b'), Ok(()));","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":1324,"byte_end":1360,"line_start":53,"line_end":53,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(q.push('c'), Err(PushError::Full('c')));","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":1361,"byte_end":1416,"line_start":54,"line_end":54,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":1417,"byte_end":1420,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(q.pop(), Ok('a'));","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":1421,"byte_end":1454,"line_start":56,"line_end":56,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(q.pop(), Ok('b'));","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":1455,"byte_end":1488,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(q.pop(), Err(PopError::Empty));","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":1489,"byte_end":1535,"line_start":58,"line_end":58,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":1536,"byte_end":1543,"line_start":59,"line_end":59,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":2170,"byte_end":2177,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"bounded","qualname":"<ConcurrentQueue<T>>::bounded","value":"fn (cap: usize) -> ConcurrentQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new bounded queue.","sig":null,"attributes":[{"value":"/ Creates a new bounded queue.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":1797,"byte_end":1829,"line_start":71,"line_end":71,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":1834,"byte_end":1837,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ The queue allocates enough space for `cap` items.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":1842,"byte_end":1895,"line_start":73,"line_end":73,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":1900,"byte_end":1903,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":1908,"byte_end":1920,"line_start":75,"line_end":75,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":1925,"byte_end":1928,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ If the capacity is zero, this constructor will panic.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":1933,"byte_end":1990,"line_start":77,"line_end":77,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":1995,"byte_end":1998,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":2003,"byte_end":2017,"line_start":79,"line_end":79,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":2022,"byte_end":2025,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":2030,"byte_end":2037,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ use concurrent_queue::ConcurrentQueue;","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":2042,"byte_end":2084,"line_start":82,"line_end":82,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":2089,"byte_end":2092,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ let q = ConcurrentQueue::<i32>::bounded(100);","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":2097,"byte_end":2146,"line_start":84,"line_end":84,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":2151,"byte_end":2158,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":2497,"byte_end":2506,"line_start":99,"line_end":99,"column_start":12,"column_end":21},"name":"unbounded","qualname":"<ConcurrentQueue<T>>::unbounded","value":"fn () -> ConcurrentQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unbounded queue.","sig":null,"attributes":[{"value":"/ Creates a new unbounded queue.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":2284,"byte_end":2318,"line_start":90,"line_end":90,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":2323,"byte_end":2326,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":2331,"byte_end":2345,"line_start":92,"line_end":92,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":2350,"byte_end":2353,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":2358,"byte_end":2365,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/ use concurrent_queue::ConcurrentQueue;","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":2370,"byte_end":2412,"line_start":95,"line_end":95,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":2417,"byte_end":2420,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ let q = ConcurrentQueue::<i32>::unbounded();","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":2425,"byte_end":2473,"line_start":97,"line_end":97,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":2478,"byte_end":2485,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":3595,"byte_end":3599,"line_start":132,"line_end":132,"column_start":12,"column_end":16},"name":"push","qualname":"<ConcurrentQueue<T>>::push","value":"fn (&self, value: T) -> Result<(), PushError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to push an item into the queue.","sig":null,"attributes":[{"value":"/ Attempts to push an item into the queue.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":2604,"byte_end":2648,"line_start":103,"line_end":103,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":2653,"byte_end":2656,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ If the queue is full or closed, the item is returned back as an error.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":2661,"byte_end":2735,"line_start":105,"line_end":105,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":2740,"byte_end":2743,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":2748,"byte_end":2762,"line_start":107,"line_end":107,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":2767,"byte_end":2770,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":2775,"byte_end":2782,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ use concurrent_queue::{ConcurrentQueue, PushError};","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":2787,"byte_end":2842,"line_start":110,"line_end":110,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":2847,"byte_end":2850,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ let q = ConcurrentQueue::bounded(1);","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":2855,"byte_end":2895,"line_start":112,"line_end":112,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":2900,"byte_end":2903,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ // Push succeeds because there is space in the queue.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":2908,"byte_end":2965,"line_start":114,"line_end":114,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(q.push(10), Ok(()));","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":2970,"byte_end":3005,"line_start":115,"line_end":115,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":3010,"byte_end":3013,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ // Push errors because the queue is now full.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":3018,"byte_end":3067,"line_start":117,"line_end":117,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(q.push(20), Err(PushError::Full(20)));","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":3072,"byte_end":3125,"line_start":118,"line_end":118,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":3130,"byte_end":3133,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ // Close the queue, which will prevent further pushes.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":3138,"byte_end":3196,"line_start":120,"line_end":120,"column_start":5,"column_end":63}},{"value":"/ q.close();","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":3201,"byte_end":3215,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":3220,"byte_end":3223,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ // Pushing now errors indicating the queue is closed.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":3228,"byte_end":3285,"line_start":123,"line_end":123,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(q.push(20), Err(PushError::Closed(20)));","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":3290,"byte_end":3345,"line_start":124,"line_end":124,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":3350,"byte_end":3353,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ // Pop the single item in the queue.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":3358,"byte_end":3398,"line_start":126,"line_end":126,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(q.pop(), Ok(10));","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":3403,"byte_end":3435,"line_start":127,"line_end":127,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":3440,"byte_end":3443,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ // Even though there is space, no more items can be pushed.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":3448,"byte_end":3511,"line_start":129,"line_end":129,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(q.push(20), Err(PushError::Closed(20)));","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":3516,"byte_end":3571,"line_start":130,"line_end":130,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":3576,"byte_end":3583,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":4557,"byte_end":4560,"line_start":164,"line_end":164,"column_start":12,"column_end":15},"name":"pop","qualname":"<ConcurrentQueue<T>>::pop","value":"fn (&self) -> Result<T, PopError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to pop an item from the queue.","sig":null,"attributes":[{"value":"/ Attempts to pop an item from the queue.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":3790,"byte_end":3833,"line_start":139,"line_end":139,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":3838,"byte_end":3841,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ If the queue is empty, an error is returned.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":3846,"byte_end":3894,"line_start":141,"line_end":141,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":3899,"byte_end":3902,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":3907,"byte_end":3921,"line_start":143,"line_end":143,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":3926,"byte_end":3929,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":3934,"byte_end":3941,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/ use concurrent_queue::{ConcurrentQueue, PopError};","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":3946,"byte_end":4000,"line_start":146,"line_end":146,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":4005,"byte_end":4008,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let q = ConcurrentQueue::bounded(1);","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":4013,"byte_end":4053,"line_start":148,"line_end":148,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":4058,"byte_end":4061,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ // Pop errors when the queue is empty.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":4066,"byte_end":4108,"line_start":150,"line_end":150,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(q.pop(), Err(PopError::Empty));","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":4113,"byte_end":4159,"line_start":151,"line_end":151,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":4164,"byte_end":4167,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ // Push one item and close the queue.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":4172,"byte_end":4213,"line_start":153,"line_end":153,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(q.push(10), Ok(()));","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":4218,"byte_end":4253,"line_start":154,"line_end":154,"column_start":5,"column_end":40}},{"value":"/ q.close();","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":4258,"byte_end":4272,"line_start":155,"line_end":155,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":4277,"byte_end":4280,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ // Remaining items can be popped.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":4285,"byte_end":4322,"line_start":157,"line_end":157,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(q.pop(), Ok(10));","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":4327,"byte_end":4359,"line_start":158,"line_end":158,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":4364,"byte_end":4367,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ // Again, pop errors when the queue is empty,","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":4372,"byte_end":4421,"line_start":160,"line_end":160,"column_start":5,"column_end":54}},{"value":"/ // but now also indicates that the queue is closed.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":4426,"byte_end":4481,"line_start":161,"line_end":161,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(q.pop(), Err(PopError::Closed));","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":4486,"byte_end":4533,"line_start":162,"line_end":162,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":4538,"byte_end":4545,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":5043,"byte_end":5051,"line_start":184,"line_end":184,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ConcurrentQueue<T>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue is empty.","sig":null,"attributes":[{"value":"/ Returns `true` if the queue is empty.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":4724,"byte_end":4765,"line_start":171,"line_end":171,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":4770,"byte_end":4773,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":4778,"byte_end":4792,"line_start":173,"line_end":173,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":4797,"byte_end":4800,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":4805,"byte_end":4812,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"/ use concurrent_queue::ConcurrentQueue;","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":4817,"byte_end":4859,"line_start":176,"line_end":176,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":4864,"byte_end":4867,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ let q = ConcurrentQueue::<i32>::unbounded();","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":4872,"byte_end":4920,"line_start":178,"line_end":178,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":4925,"byte_end":4928,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ assert!(q.is_empty());","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":4933,"byte_end":4959,"line_start":180,"line_end":180,"column_start":5,"column_end":31}},{"value":"/ q.push(1).unwrap();","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":4964,"byte_end":4987,"line_start":181,"line_end":181,"column_start":5,"column_end":28}},{"value":"/ assert!(!q.is_empty());","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":4992,"byte_end":5019,"line_start":182,"line_end":182,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":5024,"byte_end":5031,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":5568,"byte_end":5575,"line_start":206,"line_end":206,"column_start":12,"column_end":19},"name":"is_full","qualname":"<ConcurrentQueue<T>>::is_full","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue is full.","sig":null,"attributes":[{"value":"/ Returns `true` if the queue is full.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":5210,"byte_end":5250,"line_start":191,"line_end":191,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":5255,"byte_end":5258,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ An unbounded queue is never full.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":5263,"byte_end":5300,"line_start":193,"line_end":193,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":5305,"byte_end":5308,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":5313,"byte_end":5327,"line_start":195,"line_end":195,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":5332,"byte_end":5335,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":5340,"byte_end":5347,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"/ use concurrent_queue::ConcurrentQueue;","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":5352,"byte_end":5394,"line_start":198,"line_end":198,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":5399,"byte_end":5402,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ let q = ConcurrentQueue::bounded(1);","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":5407,"byte_end":5447,"line_start":200,"line_end":200,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":5452,"byte_end":5455,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ assert!(!q.is_full());","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":5460,"byte_end":5486,"line_start":202,"line_end":202,"column_start":5,"column_end":31}},{"value":"/ q.push(1).unwrap();","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":5491,"byte_end":5514,"line_start":203,"line_end":203,"column_start":5,"column_end":28}},{"value":"/ assert!(q.is_full());","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":5519,"byte_end":5544,"line_start":204,"line_end":204,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":5549,"byte_end":5556,"line_start":205,"line_end":205,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":6141,"byte_end":6144,"line_start":229,"line_end":229,"column_start":12,"column_end":15},"name":"len","qualname":"<ConcurrentQueue<T>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of items in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of items in the queue.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":5732,"byte_end":5777,"line_start":213,"line_end":213,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":5782,"byte_end":5785,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":5790,"byte_end":5804,"line_start":215,"line_end":215,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":5809,"byte_end":5812,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":5817,"byte_end":5824,"line_start":217,"line_end":217,"column_start":5,"column_end":12}},{"value":"/ use concurrent_queue::ConcurrentQueue;","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":5829,"byte_end":5871,"line_start":218,"line_end":218,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":5876,"byte_end":5879,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ let q = ConcurrentQueue::unbounded();","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":5884,"byte_end":5925,"line_start":220,"line_end":220,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(q.len(), 0);","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":5930,"byte_end":5957,"line_start":221,"line_end":221,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":5962,"byte_end":5965,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(q.push(10), Ok(()));","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":5970,"byte_end":6005,"line_start":223,"line_end":223,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(q.len(), 1);","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":6010,"byte_end":6037,"line_start":224,"line_end":224,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":6042,"byte_end":6045,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(q.push(20), Ok(()));","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":6050,"byte_end":6085,"line_start":226,"line_end":226,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(q.len(), 2);","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":6090,"byte_end":6117,"line_start":227,"line_end":227,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":6122,"byte_end":6129,"line_start":228,"line_end":228,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":6736,"byte_end":6744,"line_start":251,"line_end":251,"column_start":12,"column_end":20},"name":"capacity","qualname":"<ConcurrentQueue<T>>::capacity","value":"fn (&self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the capacity of the queue.","sig":null,"attributes":[{"value":"/ Returns the capacity of the queue.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":6294,"byte_end":6332,"line_start":236,"line_end":236,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":6337,"byte_end":6340,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Unbounded queues have infinite capacity, represented as [`None`].","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":6345,"byte_end":6414,"line_start":238,"line_end":238,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":6419,"byte_end":6422,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":6427,"byte_end":6441,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":6446,"byte_end":6449,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":6454,"byte_end":6461,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"/ use concurrent_queue::ConcurrentQueue;","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":6466,"byte_end":6508,"line_start":243,"line_end":243,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":6513,"byte_end":6516,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ let q = ConcurrentQueue::<i32>::bounded(7);","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":6521,"byte_end":6568,"line_start":245,"line_end":245,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(q.capacity(), Some(7));","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":6573,"byte_end":6611,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":6616,"byte_end":6619,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let q = ConcurrentQueue::<i32>::unbounded();","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":6624,"byte_end":6672,"line_start":248,"line_end":248,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(q.capacity(), None);","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":6677,"byte_end":6712,"line_start":249,"line_end":249,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":6717,"byte_end":6724,"line_start":250,"line_end":250,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":7884,"byte_end":7889,"line_start":285,"line_end":285,"column_start":12,"column_end":17},"name":"close","qualname":"<ConcurrentQueue<T>>::close","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Closes the queue.","sig":null,"attributes":[{"value":"/ Closes the queue.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":6910,"byte_end":6931,"line_start":258,"line_end":258,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":6936,"byte_end":6939,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if this call closed the queue, or `false` if it was already closed.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":6944,"byte_end":7030,"line_start":260,"line_end":260,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":7035,"byte_end":7038,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ When a queue is closed, no more items can be pushed but the remaining items can still be","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":7043,"byte_end":7135,"line_start":262,"line_end":262,"column_start":5,"column_end":97}},{"value":"/ popped.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":7140,"byte_end":7151,"line_start":263,"line_end":263,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":7156,"byte_end":7159,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":7164,"byte_end":7178,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":7183,"byte_end":7186,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":7191,"byte_end":7198,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ use concurrent_queue::{ConcurrentQueue, PopError, PushError};","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":7203,"byte_end":7268,"line_start":268,"line_end":268,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":7273,"byte_end":7276,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ let q = ConcurrentQueue::unbounded();","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":7281,"byte_end":7322,"line_start":270,"line_end":270,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(q.push(10), Ok(()));","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":7327,"byte_end":7362,"line_start":271,"line_end":271,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":7367,"byte_end":7370,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ assert!(q.close());  // `true` because this call closes the queue.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":7375,"byte_end":7445,"line_start":273,"line_end":273,"column_start":5,"column_end":75}},{"value":"/ assert!(!q.close()); // `false` because the queue is already closed.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":7450,"byte_end":7522,"line_start":274,"line_end":274,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":7527,"byte_end":7530,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ // Cannot push any more items when closed.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":7535,"byte_end":7581,"line_start":276,"line_end":276,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(q.push(20), Err(PushError::Closed(20)));","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":7586,"byte_end":7641,"line_start":277,"line_end":277,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":7646,"byte_end":7649,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ // Remaining items can still be popped.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":7654,"byte_end":7697,"line_start":279,"line_end":279,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(q.pop(), Ok(10));","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":7702,"byte_end":7734,"line_start":280,"line_end":280,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":7739,"byte_end":7742,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ // When no more items are present, the error is `Closed`.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":7747,"byte_end":7808,"line_start":282,"line_end":282,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(q.pop(), Err(PopError::Closed));","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":7813,"byte_end":7860,"line_start":283,"line_end":283,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":7865,"byte_end":7872,"line_start":284,"line_end":284,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":8355,"byte_end":8364,"line_start":305,"line_end":305,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<ConcurrentQueue<T>>::is_closed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue is closed.","sig":null,"attributes":[{"value":"/ Returns `true` if the queue is closed.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":8042,"byte_end":8084,"line_start":292,"line_end":292,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":8089,"byte_end":8092,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":8097,"byte_end":8111,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":8116,"byte_end":8119,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":8124,"byte_end":8131,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ use concurrent_queue::ConcurrentQueue;","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":8136,"byte_end":8178,"line_start":297,"line_end":297,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":8183,"byte_end":8186,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ let q = ConcurrentQueue::<i32>::unbounded();","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":8191,"byte_end":8239,"line_start":299,"line_end":299,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":8244,"byte_end":8247,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ assert!(!q.is_closed());","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":8252,"byte_end":8280,"line_start":301,"line_end":301,"column_start":5,"column_end":33}},{"value":"/ q.close();","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":8285,"byte_end":8299,"line_start":302,"line_end":302,"column_start":5,"column_end":19}},{"value":"/ assert!(q.is_closed());","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":8304,"byte_end":8331,"line_start":303,"line_end":303,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":8336,"byte_end":8343,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":169},"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":9004,"byte_end":9009,"line_start":327,"line_end":327,"column_start":5,"column_end":10},"name":"Empty","qualname":"::PopError::Empty","value":"PopError::Empty","parent":{"krate":0,"index":168},"children":[],"decl_id":null,"docs":" The queue is empty but not closed.\n","sig":null,"attributes":[{"value":"/ The queue is empty but not closed.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":8961,"byte_end":8999,"line_start":326,"line_end":326,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":171},"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":9055,"byte_end":9061,"line_start":330,"line_end":330,"column_start":5,"column_end":11},"name":"Closed","qualname":"::PopError::Closed","value":"PopError::Closed","parent":{"krate":0,"index":168},"children":[],"decl_id":null,"docs":" The queue is empty and closed.\n","sig":null,"attributes":[{"value":"/ The queue is empty and closed.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":9016,"byte_end":9050,"line_start":329,"line_end":329,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":168},"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":8946,"byte_end":8954,"line_start":325,"line_end":325,"column_start":10,"column_end":18},"name":"PopError","qualname":"::PopError","value":"PopError::{Empty, Closed}","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":171}],"decl_id":null,"docs":" Error which occurs when popping from an empty queue.\n","sig":null,"attributes":[{"value":"/ Error which occurs when popping from an empty queue.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":8842,"byte_end":8898,"line_start":323,"line_end":323,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":9154,"byte_end":9162,"line_start":335,"line_end":335,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<PopError>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue is empty but not closed.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the queue is empty but not closed.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":9086,"byte_end":9142,"line_start":334,"line_end":334,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":9362,"byte_end":9371,"line_start":343,"line_end":343,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PopError>::is_closed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue is empty and closed.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the queue is empty and closed.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":9298,"byte_end":9350,"line_start":342,"line_end":342,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":184},"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":10191,"byte_end":10195,"line_start":375,"line_end":375,"column_start":5,"column_end":9},"name":"Full","qualname":"::PushError::Full","value":"PushError::Full(T)","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" The queue is full but not closed.\n","sig":null,"attributes":[{"value":"/ The queue is full but not closed.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":10149,"byte_end":10186,"line_start":374,"line_end":374,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":187},"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":10234,"byte_end":10240,"line_start":378,"line_end":378,"column_start":5,"column_end":11},"name":"Closed","qualname":"::PushError::Closed","value":"PushError::Closed(T)","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" The queue is closed.\n","sig":null,"attributes":[{"value":"/ The queue is closed.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":10205,"byte_end":10229,"line_start":377,"line_end":377,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":182},"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":10130,"byte_end":10139,"line_start":373,"line_end":373,"column_start":10,"column_end":19},"name":"PushError","qualname":"::PushError","value":"PushError::{Full, Closed}","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":187}],"decl_id":null,"docs":" Error which occurs when pushing into a full or closed queue.\n","sig":null,"attributes":[{"value":"/ Error which occurs when pushing into a full or closed queue.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":10018,"byte_end":10082,"line_start":371,"line_end":371,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":10332,"byte_end":10342,"line_start":383,"line_end":383,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PushError<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the item that couldn't be pushed.\n","sig":null,"attributes":[{"value":"/ Unwraps the item that couldn't be pushed.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":10275,"byte_end":10320,"line_start":382,"line_end":382,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":10541,"byte_end":10548,"line_start":391,"line_end":391,"column_start":12,"column_end":19},"name":"is_full","qualname":"<PushError<T>>::is_full","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue is full but not closed.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the queue is full but not closed.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":10474,"byte_end":10529,"line_start":390,"line_end":390,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":10745,"byte_end":10754,"line_start":399,"line_end":399,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PushError<T>>::is_closed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue is closed.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the queue is closed.","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":10691,"byte_end":10733,"line_start":398,"line_end":398,"column_start":5,"column_end":47}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\bounded.rs","byte_start":14222,"byte_end":14229,"line_start":56,"line_end":56,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\bounded.rs","byte_start":23105,"byte_end":23112,"line_start":300,"line_end":300,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\unbounded.rs","byte_start":25079,"byte_end":25083,"line_start":40,"line_end":40,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\unbounded.rs","byte_start":25679,"byte_end":25684,"line_start":65,"line_end":65,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":91},{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\unbounded.rs","byte_start":27519,"byte_end":27528,"line_start":127,"line_end":127,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\unbounded.rs","byte_start":37151,"byte_end":37160,"line_start":377,"line_end":377,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":1616,"byte_end":1631,"line_start":62,"line_end":62,"column_start":31,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":1668,"byte_end":1683,"line_start":63,"line_end":63,"column_start":31,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":1772,"byte_end":1787,"line_start":70,"line_end":70,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":8546,"byte_end":8561,"line_start":313,"line_end":313,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":9071,"byte_end":9079,"line_start":333,"line_end":333,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":9527,"byte_end":9535,"line_start":351,"line_end":351,"column_start":23,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":9560,"byte_end":9568,"line_start":353,"line_end":353,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":9800,"byte_end":9808,"line_start":362,"line_end":362,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":10256,"byte_end":10265,"line_start":381,"line_end":381,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":10932,"byte_end":10941,"line_start":407,"line_end":407,"column_start":38,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":10984,"byte_end":10993,"line_start":409,"line_end":409,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":11281,"byte_end":11290,"line_start":418,"line_end":418,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\bounded.rs","byte_start":14222,"byte_end":14229,"line_start":56,"line_end":56,"column_start":9,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":29},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\bounded.rs","byte_start":23105,"byte_end":23112,"line_start":300,"line_end":300,"column_start":18,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":29},"to":{"krate":2,"index":2097}},{"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\unbounded.rs","byte_start":25079,"byte_end":25083,"line_start":40,"line_end":40,"column_start":9,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":74},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\unbounded.rs","byte_start":25679,"byte_end":25684,"line_start":65,"line_end":65,"column_start":9,"column_end":14},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":82},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\unbounded.rs","byte_start":27519,"byte_end":27528,"line_start":127,"line_end":127,"column_start":9,"column_end":18},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":97},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\unbounded.rs","byte_start":37151,"byte_end":37160,"line_start":377,"line_end":377,"column_start":18,"column_end":27},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":97},"to":{"krate":2,"index":2097}},{"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":1616,"byte_end":1631,"line_start":62,"line_end":62,"column_start":31,"column_end":46},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":115},"to":{"krate":2,"index":1904}},{"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":1668,"byte_end":1683,"line_start":63,"line_end":63,"column_start":31,"column_end":46},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":115},"to":{"krate":2,"index":1916}},{"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":1772,"byte_end":1787,"line_start":70,"line_end":70,"column_start":9,"column_end":24},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":115},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":8546,"byte_end":8561,"line_start":313,"line_end":313,"column_start":24,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":115},"to":{"krate":2,"index":6076}},{"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":9071,"byte_end":9079,"line_start":333,"line_end":333,"column_start":6,"column_end":14},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":9527,"byte_end":9535,"line_start":351,"line_end":351,"column_start":23,"column_end":31},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":1610}},{"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":9560,"byte_end":9568,"line_start":353,"line_end":353,"column_start":21,"column_end":29},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":168},"to":{"krate":2,"index":6076}},{"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":9800,"byte_end":9808,"line_start":362,"line_end":362,"column_start":23,"column_end":31},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":168},"to":{"krate":2,"index":6081}},{"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":10256,"byte_end":10265,"line_start":381,"line_end":381,"column_start":9,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":10932,"byte_end":10941,"line_start":407,"line_end":407,"column_start":38,"column_end":47},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":182},"to":{"krate":1,"index":1610}},{"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":10984,"byte_end":10993,"line_start":409,"line_end":409,"column_start":36,"column_end":45},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":182},"to":{"krate":2,"index":6076}},{"span":{"file_name":"D:\\Code\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\concurrent-queue-1.1.2\\src\\lib.rs","byte_start":11281,"byte_end":11290,"line_start":418,"line_end":418,"column_start":26,"column_end":35},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":182},"to":{"krate":2,"index":6081}}]}